import { CollectionSlug, PayloadRequest } from 'payload';

async function importFullCatalog(tree: any, req: PayloadRequest) {
  console.log('‚è≥ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');

  // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  const existingProducts = await req.payload.find({
    collection: 'products' as CollectionSlug,
    limit: 10000
  });
  for (const prod of existingProducts.docs) {
    await req.payload.delete({
      collection: 'products' as CollectionSlug,
      id: prod.id
    });
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const existingCategories = await req.payload.find({
    collection: 'categories' as CollectionSlug,
    limit: 10000
  });
  for (const cat of existingCategories.docs) {
    await req.payload.delete({
      collection: 'categories' as CollectionSlug,
      id: cat.id
    });
  }

  console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞—á–∏–Ω–∞—é –∏–º–ø–æ—Ä—Ç...');

  // –ò–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

  await importTree(tree, null, req);

  console.log('‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.');
}

async function importTree(
  node: any,
  parentCategoryId: string | null = null,
  req: PayloadRequest
) {
  for (const [key, value] of Object.entries(node)) {
    console.log(`üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ ${key}...`);
    if (key === '_products') {
      for (const product of value as any[]) {
        await req.payload.create({
          collection: 'products' as CollectionSlug,
          data: {
            ...product,
            category: parentCategoryId
          }
        });
      }
    } else {
      // —Å–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      const categoryDoc = await req.payload.create({
        collection: 'categories' as CollectionSlug,
        data: {
          name: key,
          category: parentCategoryId as CollectionSlug
        }
      });

      // —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π/–ø—Ä–æ–¥—É–∫—Ç–æ–≤
      await importTree(value, categoryDoc.id, req);
    }
  }
}

export default importFullCatalog;
